/**
 * @brief An ML4F model example that can be used to test the MLRunner lib.
 *
 * @copyright
 * Copyright 2024 Micro:bit Educational Foundation.
 * SPDX-License-Identifier: MIT
 */
#pragma once

/* This is a struct representation of the header included at the beginning of model_example
#include <mlrunner.h>
const ml_model_header_t ml4f_model_example_header = {
    .magic0 = MODEL_HEADER_MAGIC0,
    .header_size = 0x31,        // 49
    .model_offset = 0x34,       // 52
    .reserved = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    .number_of_labels = 0x04,
    // 33 bytes + 3 extra null terminators at the end
    .labels = {
        "Jumping\0"
        "Running\0"
        "Standing\0"
        "Walking\0\0\0"
    }
};
*/

#if DEVICE_MLRUNNER_INCLUDE_MODEL_EXAMPLE == 1

#define ml4f_model_example_header_len   52
#define ml4f_model_example_size         13852
#define ml4f_full_model_size            (ml4f_model_example_header_len + ml4f_model_example_size)

const unsigned int model_example[] = {
    // Manually converted ml4f_model_example_header
    0x4D4F444C, 0x00340031, 0x00000000, 0x04000000,
    0x706D754A, 0x00676E69, 0x6E6E7552, 0x00676E69,
    0x6E617453, 0x676E6964, 0x6C615700, 0x676E696B,
    0x00000000,
    // Original ML4F model from this point forward
    0x30470f62, 0x46344c4d, 0x00000054, 0x0000d864, 0x00001874, 0x00000000, 0x00000000, 0x00002ec8, 
    0x00000008, 0x00000001, 0x00000008, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x000000fa, 0x00000003, 0x00000000, 0x00000004, 0x00000000, 0x5ff0e92d, 0x6901460f, 0x60391809, 
    0x60792100, 0x46036838, 0xf2412400, 0x18ba7208, 0x181200a0, 0x0a01ecb3, 0xec82250f, 0xf2020a01, 
    0xec820250, 0xf2020a01, 0xec820250, 0xf2020a01, 0xec820250, 0xf2020a01, 0xec820250, 0xf2020a01, 
    0x3d010250, 0xec82d1e9, 0xf2020a01, 0x25000250, 0x8a03ecb3, 0x0108f207, 0x4368200c, 0xf2411809, 
    0x18ba7208, 0x181200a0, 0xecb1264c, 0xf2a10a03, 0xee200108, 0xee600a08, 0xee210aa8, 0xee301a09, 
    0xee300a20, 0xecd20a01, 0xee300a01, 0xec820a20, 0xf2020a01, 0xf2010250, 0x3e010120, 0x3501d1e5, 
    0xdbd52d19, 0x2c143401, 0xf241dbaf, 0x18ba7208, 0x68102498, 0xbfb82800, 0x0000f240, 0x6810c201, 
    0xbfb82800, 0x0000f240, 0x6810c201, 0xbfb82800, 0x0000f240, 0x6810c201, 0xbfb82800, 0x0000f240, 
    0x6810c201, 0xbfb82800, 0x0000f240, 0x6810c201, 0xbfb82800, 0x0000f240, 0x6810c201, 0xbfb82800, 
    0x0000f240, 0x6810c201, 0xbfb82800, 0x0000f240, 0x6810c201, 0xbfb82800, 0x0000f240, 0x6810c201, 
    0xbfb82800, 0x0000f240, 0x3c01c201, 0x6838d1c1, 0x73c0f241, 0xecb318c3, 0xf2411a1e, 0x18ba7208, 
    0xec92244c, 0xee200a01, 0xee300a01, 0xeca20a21, 0xec920a01, 0xee200a01, 0xee300a02, 0xeca20a22, 
    0xec920a01, 0xee200a01, 0xee300a03, 0xeca20a23, 0xec920a01, 0xee200a01, 0xee300a04, 0xeca20a24, 
    0xec920a01, 0xee200a01, 0xee300a05, 0xeca20a25, 0xec920a01, 0xee200a01, 0xee300a06, 0xeca20a26, 
    0xec920a01, 0xee200a01, 0xee300a07, 0xeca20a27, 0xec920a01, 0xee200a01, 0xee300a08, 0xeca20a28, 
    0xec920a01, 0xee200a01, 0xee300a09, 0xeca20a29, 0xec920a01, 0xee200a01, 0xee300a0a, 0xeca20a2a, 
    0xec920a01, 0xee200a01, 0xee300a0b, 0xeca20a2b, 0xec920a01, 0xee200a01, 0xee300a0c, 0xeca20a2c, 
    0xec920a01, 0xee200a01, 0xee300a0d, 0xeca20a2d, 0xec920a01, 0xee200a01, 0xee300a0e, 0xeca20a2e, 
    0xec920a01, 0xee200a01, 0xee300a0f, 0xeca20a2f, 0xf2020a01, 0x3c010214, 0xecb3d183, 0xf2411a0a, 
    0x18ba7244, 0xec92244c, 0xee200a01, 0xee300a01, 0xeca20a21, 0xec920a01, 0xee200a01, 0xee300a02, 
    0xeca20a22, 0xec920a01, 0xee200a01, 0xee300a03, 0xeca20a23, 0xec920a01, 0xee200a01, 0xee300a04, 
};

#endif // DEVICE_MLRUNNER_INCLUDE_MODEL_EXAMPLE == 1
